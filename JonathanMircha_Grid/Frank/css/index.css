.item {
    border-color: aqua;
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
}

.container {
    background-color: rgb(0, 0, 0);
    height: 95vh;
    /* width: 80%;*/

}

.sub-item {
    background-color: aqua;
    border: medium solid yellow;

}

.grid-explicit {
    display: grid;
    /*aplicamos display grid a los elementos*/
    grid-template-rows: 3rem 20vh 50% 1fr;
    /*Se define con un espacio por cada variable las columnas 1 2 3 4 ..... --->rows*/
    /*se usa la palabra fr =>fraccion  que este usara el espacio que sobre */

    /*                                          column=>parados 
   rows =>a los parados izquieda a derecha   50%/ 3 rem  - 100px/ 20vh -  1fr/30% -   1fr
                                    
*/
    grid-template-columns: 20% 100px 1fr;
    /* GRID 5 * 4*/
    grid-template-columns: repeat(5, 20%);
    grid-template-rows: repeat(4, auto);
    /*SE ACOMODA AL CONTENIDO*/

    grid-template-rows: repeat(4, 25%);
    /*SE FUERZA A QUE SIGA CORTA LA IMAGEN*/


    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 1fr);

    /* GRID 4c * 5r*/
    grid-template-columns: 20% 30% 30% 20%;

    grid-template-rows: 20% repeat(2, 30%) 20%;
    /*repeat(2 ,30%) = 30% + 30% */

    /*HACER ESPACIADO A LOS GRIDS*/
    grid-column-gap: 2rem;
    grid-gap: 1rem;
    grid-column-gap: 1rem;
    grid-row-gap: 2rem;
    row-gap: 2rem;
    /*grid: 100px 0px;  /*columnas , rows*/
    /*gap : row-column*/
    gap: 1vh 1vw;
    gap: 0;
}

.grid-explicit .item:nth-child(10) {
    color: cyan;
    background-color: rgb(84, 84, 171);
    grid-row-start: 2;
    /*para mover la grid 10 a la grid 6 se usa estas*/
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;
    /*FIN DEL MOVIMIENTOS*/
    grid-row: 2/3;
    /*para aplicar de forma mas facil el movimiento 2 =>row-start / 3==> row-ent
      
    */
    grid-column: 3/4;
    /*para aplicar forma mas facil el movimiento  3 =>grid-column-start / 4=>grid-column-end */
    /* !importante =>>NO SE CUENTA LAS CELDAS EN SI SI NO LAS LINEAS QUE LO SEPARAN */
    /*PARA UNIR CELDA SE PONE 3/5*/
    grid-column: 3/5;

    grid-area: 2/3 / 3 / 5;
    /*esto es lo mismo que decir grid-row-star/grid-row-end /grid-column/start /grid-column-end */

}

.grid-explicit .item:nth-child(12) {
    color: aqua;
    background-color: blanchedalmond;
    grid-row: span 2;
    /*abarca 2 rows*/
    grid-column: span 3;
}

.grid-explicit .item:nth-child(15) {
    color: aqua;
    background-color: rgb(189, 124, 25);
    grid-row: 1/span 2;
    /*abarca 2 espacios de celdas*/
    grid-column: 1/span 2;
}

/* ------------- GRID LINE NAMES darle nombres a las lineas*/
.grid-line-names {
    display: grid;
    /*grid de 3cX3r*/
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: [linea-c1]1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
    grid-template-rows: [linea-r1]auto [linea-r2] auto [linea-r3] auto [linea-r4];

}

.grid-line-names .item:nth-child(3) {
    color: cyan;
    grid-row: linea-r3/linea-r4;
    grid-column: linea-c1/linea-c4;
}

/* *****  GRID AREAS ****** */
.grid-areas {
    display: grid;
    grid-template-columns: 1fr 200px;
    grid-template-rows: 100px repeat(2, 1fr) 50px;
    grid-template-areas:
        "header  header"
        "content sidebar"
        "content ."
        /*PARA DEJAR UNA CELDA VACIA SE PONE UN PUNTO */
        "footer  footer";

}

.header {
    grid-area: header;

}

.content {
    grid-area: content;

}

.sidebar {
    grid-area: sidebar;
}

.footer {
    grid-area: footer;
}

/* -------------GRID IMPLICIR VIDEO 06  -------- */
.grid-implicit {

    width: 40%;
    /*el container tiene un total de 80% y cuando lo repartimos por igual caben los 2 pero si no hay salto de linea  .container de arriba*/

    display: grid;
    /*va a ocupar el espacio requerido se comporta como bloque ocupa todo el espacio del largo y provoca saltos de linea*/
    display: inline-grid;
    /*esta se comportan como elementos de lineas sin provocar saltos de linea*/
    grid-template-columns: repeat(4, 1fr);
    /*grid explicita : el tamaño que nosotros le damos a las grid 
                                            grid implicita : Es el tamaño de la grid que automaticamente se crea al aumentar los contenidos*/
    grid-template-rows: repeat(3, 100px);

}

.grid-flow {
    display: grid;
    /*grid 5 * 3*/
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 100px);

    grid-auto-flow: row;
    /*con esta opcion le decimos hacia donde quiero que el flujo que se cree las nuevas columnas o filas puede ser row o columns*/
    /*   grid-auto-flow:column;*/
    grid-auto-rows: 100px;
    /*de que tamaño van a ser las celdas que se crearan */
    /*le decimo que las cuadriculas que se crean sean de un tamaño determinado tambien puede ser automatico auto*/
    grid-auto-flow: column;
    grid-auto-columns: 50px;
    /*de que tamaño van a ser las celdas que se crearan */
}

.grid-flow-dens {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-auto-flow: column dense;
    /*PARA QUE LOS ESPACIOS SE TAPEN TODOS LOS ESPACIOS*/

}

/*.grid-flow-dens .item:nth-child(9){
    background-color: rgb(223, 23, 23);
    color:aqua;
    grid-row: span 3;
    grid-column: span 3;

 

}*/
.grid-flow-dens .item:nth-child(11) {
    background-color: rgb(223, 23, 23);
    color: aqua;
    grid-row: span 3;
    grid-column: span 3;


}

/* -------------------- GRID LAYERS ---------*/
.grid-layers {
    /* Grid 4 x 4*/
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);


}

.grid-layers .item:nth-child(1) {
    background-color: yellow;
    grid-column: 1/3;
    grid-row: 1/3;
}

.grid-layers .item:nth-child(3) {
    background-color: rgb(26, 253, 79);
    grid-column: 5/3;
    grid-row: 1/3;
}

.grid-layers .item:nth-child(2) {
    background-color: rgb(216, 66, 66);
    grid-column: 1/3;
    grid-row: 3/5;
}

.grid-layers .item:nth-child(4) {
    background-color: rgb(104, 32, 228);
    grid-column: 3/5;
    grid-row: 3/5;
}

.grid-layers .item:nth-child(5) {
    background-color: rgb(226, 14, 14);
    grid-column: 2/4;
    grid-row: 2/4;
}



/* ----------------- GRID ORDER -------------- */
.grid-order {
    display: grid;
    /* GRID 3 * 2 */
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);

}

.grid-order .item:nth-child(1) {
    /*default es : 0  ,puede aceptar numeros - 1 0 1 2 minentras menos el numero va a estar mas cerca del inicio */
    order: 1;
}

.grid-order .item:nth-child(2) {
    /*default es : 0  ,puede aceptar numeros - 1 0 1 minentras menos el numero va a estar mas cerca del inicio */
    order: 2;
}

.grid-order .item:nth-child(5) {
    /*default es : 0  ,puede aceptar numeros - 1 0 1 minentras menos el numero va a estar mas cerca del inicio */
    order: -1;
}


/* ---------------   GRID ALIGN ---------------------*/

.grid-align {
    display: grid;
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);
    /*el justify alinea en la LINEA X */
    justify-items: stretch;
    /* stretch =>estirar */
    /*justify-items: center;  =>lo alinea hacia el centro*/
    justify-items: start;
    /*el justify permite alinear hacia la izquierda*/
    justify-items: end;
    /*lo alinea ahcia la derecha*/

    /*ahora en Y CON ALIGN */
    align-items: stretch;
    align-items: start;
    align-items: end;
    align-items: center;
}

.grid-align .item:nth-child(4) {
    /*para solo mover un solo elemento se usa el self*/
    justify-self: start;
    align-self: start;
}

/* ---------------------- GRID -TRACKS ------------------------------ */

.grid-align-tracks {
    display: grid;
    grid-template-columns: repeat(3, 150px);
    grid-template-rows: repeat(2, 150px);

    /*justify-content alinea los tracks de la grid en el eje horizontal (X)*/
    justify-content: center;
    justify-content: end;
    /*mueve el contenido a la derecha*/
    justify-content: start;
    /*mueve a la izquierda*/
    justify-content: space-between;
    /*reparte el espacio sobrante izquierda -centro -derecha*/
    justify-content: space-around;
    justify-content: space-evenly;

    /*align-content alinea los tracks de la grid en el eje vertical */
    align-content: start;
    align-content: center;
    align-content: end;
    align-content: space-between;
    align-content: space-around;
}

/*------------------------GRID MIX-MAX --------------------------*/
.grid-min-max {
    display: grid;
    /*------------grid 4 X infinito*/
    grid-template-columns: repeat(4, 1fr);

    grid-template-columns: repeat(4, minmax(80px, 150px));
    /*tamaño-min 2º tamaño-max acepta cualquier valor rem px em %*/
    grid-template-columns: repeat(4, minmax(min-content, 200px));
    /*min-content ==>minimo de contenido que no se corte */
    grid-template-columns: repeat(4, minmax(100px, min-content));
    grid-template-columns: repeat(4, minmax(100px, max-content));
    grid-template-columns: repeat(4, minmax(max-content, 100px));
}

/* ----------------- GRID -REPEAT ---------------------------*/

.grid-repeat {
    display: grid;
    grid-template-columns: repeat(4, 10% 20% 30% 40%);
    grid-template-columns: repeat(3, 10% 20% 30% 40%);
    grid-template-columns: repeat(2, 10% 20% 30% 40%);
    grid-template-columns: repeat(1, 10% 20% 30% 40%);

    grid-template-rows: repeat(2, 100px, 200px);
    grid-auto-rows: 100px;
    /*cuando se crea una nuevas grids pero conservan su tamañano de 100px*/
    grid-auto-rows: repeat(2, 100px, 200px);
    /*esto no fcuniona ya que no se aplica en la sintaxys*/
}

/* -------------------------GRID DINAMICAS -------------*/
.grid-dynamics {
    display: grid;
    grid-template-columns: repeat(4, 100px);

    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    /*crea unas filla de igual tamaño que los que ya existen*/
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    /*ajusta la grid a los track existentes*/
}

/*--------------------------GRID RESPONSIVE SIN MEDIAQUERY ------------*/
.grid-responsive {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1vw 1vh;
}


/* ------------------------GRID -ANIDADAS ------------------------*/
.grid-anidadas {
    display: grid;
    grid-template-columns: repeat(3, 1fr);

}

/* ------------------------- GRID -PADRE E HIJOS -----------------*/
.grid-Padre {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
}

.sub-grid {
    /*par que las caracterisitcas de subgrid funcione es necesario hacer lo siguientes :
    (1) . Definir explicitamente el tamaño que ocupara el elemento que aplicara subgrid dentro del contenedor Padre
    grid,es decir definir sus propiedades grid-column y grid-row
    (2) .Aplicar display grid al elemento que aplicada subgrid
    (3) .Aplicar el v alor de subgrid a las columnas a las filas o ambas depende de como se requiera */
    grid-column: span 3;
    grid-row: 1/3;
    display: grid;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
}